/*
 * Copyright 2020-2020 Exactpro (Exactpro Systems Limited)
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.palantir.docker' version '0.25.0'
    id 'java'
    id 'application'
    id 'antlr'
}

ext {
    grpcVersion         = '1.29.0'
    version_slf4j       = '1.7.30'
}

group "com.exactpro.th2"
version release_version

sourceCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    antlr group: 'org.antlr', name: 'antlr4', version: '4.8-1'

    compile "org.slf4j:slf4j-api:${version_slf4j}"
    compile "org.slf4j:slf4j-log4j12:${version_slf4j}"

    compile "commons-cli:commons-cli:1.3.1"

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.1")
}

compileJava.dependsOn.add('generateGrammarSource')

sourceSets {
    main.java.srcDirs += "build/generated-src/antlr/main"
}

generateGrammarSource {
    arguments += ["-package", "com.exactpro.th2.proto.service.generator.core.antlr"]
}

jar {
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'com.exactpro.th2.proto.service.generator.CmdMain',
                'Created-By':               "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                'Specification-Title':      '',
                'Specification-Vendor':     'Exactpro Systems LLC',
                'Implementation-Title':     project.archivesBaseName,
                'Implementation-Vendor':    'Exactpro Systems LLC',
                'Implementation-Vendor-Id': 'com.exactpro',
                'Implementation-Version':   project.version
        )
    }
}

archivesBaseName = 'th2-python-service-generator'

application {
    mainClassName 'com.exactpro.th2.proto.service.generator.CmdMain'
}

applicationName = 'service'

distTar {
    archiveName "${applicationName}.tar"
}

dockerPrepare {
    dependsOn distTar
}

docker {
    copySpec.from(tarTree("$buildDir/distributions/${applicationName}.tar"))
}